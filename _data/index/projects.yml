# projects section data
# If you don't have language feature(language.yml is empty), ignore "i18n" items
# Suggest projects' img be located at '/static/assets/img/landing', and edit following img items.

- name: Identify Commercial Centers using Point of Interest
  url: https://aakashjhawar.github.io/commercial-centers-using-POI/
  gh_user: aakashjhawar
  repo: commercial-centers-using-POI/
  img: /static/assets/img/landing/delhi-polygon.png
  desc: >
    Gathered all POI using Overpass Python wrapper. Preprocessed the dataset.
    Removed outliers from the dataset using DBSCAN. Created clusters based on amenities and plot the polygons on Google Maps. 
    

- name: Face Recognition using OpenCV
  url: https://github.com/aakashjhawar/face-recognition-using-opencv
  gh_user: aakashjhawar
  repo: face-recognition-using-opencv
  img: /static/assets/img/landing/face_icon.jpeg
  desc: >
    Extracted face embeddings for each face in the dataset using pretrained OpenFace model. 
    Trained a Neural Network on the face embeddings to recognize faces with an accuracy of 90%.


- name: Fotoxo - Photo Management App
  url: https://fotoxo.herokuapp.com
  gh_user: aakashjhawar
  repo: photo-app
  img: /static/assets/img/landing/photo_app.png
  desc: >
    Implemented Sendgrid for sending account verification emails.
    Used Strip API for receiving card payments from users and AWS S3 Bucket for storing images in production.


- name: SolveSudoku - Sudoku Solver using DL and OpenCV
  url: https://github.com/aakashjhawar/SolveSudoku
  gh_user: aakashjhawar
  repo: SolveSudoku
  img: /static/assets/img/landing/sudoku.png
  desc: >
    Extracted sudoku from an image by cropping and warping the largest contour detected in the image.
    Trained a Neural Network over 60,000 images to identify each digit and store it in a 2D matrix.
    Final solution of sudoku is calculated using Backtracking Algorithm.


    - name: Hand Gesture Recognition
  url: https://github.com/aakashjhawar/https://github.com/aakashjhawar/Hand-Gesture-Recognition
  gh_user: aakashjhawar
  repo: Hand-Gesture-Recognition
  img: /static/assets/img/landing/hand_gesture.png
  desc: >
    Extracted and segmented hand region from live video by thresholding. Count the number of fingers from the segmented hand region by using Convex Hull.


- name: Group Chat Web App
  url: https://github.com/aakashjhawar/ChatApp
  gh_user: aakashjhawar
  repo: ChatApp
  img: /static/assets/img/landing/chat.png
  desc: >
      Achieved real-time messaging by implemented WebSockets with Action Cable. Used Devise gem for authentication. Used Semantic UI framework for front-end development.


- name: Investry - Stock Tracker App
  url: https://investry.herokuapp.com
  gh_user: aakashjhawar
  repo: finance-tracker
  img: /static/assets/img/landing/stock.png
  desc: >
    A web app built using RoR in which users can track stock prices and follow particular stocks according to their choice. 
    User can also connect other users and look up their stocks.


- name: Image Watermarking
  url: https://github.com/aakashjhawar/Image-Watermarking
  gh_user: aakashjhawar
  repo: Image-Watermarking
  img: /static/assets/img/landing/watermark.png
  desc: Implemented Image Watermarking using Discrete Cosine Transformation in MATLAB and Simulink. The Watermark will be added in the frequency domain of the image.


- name: Event Prediction using Sentiment Analysis
  gh_user: aakashjhawar
  img: /static/assets/img/landing/nlp-icon.png
  desc: Developed a system that predicts the sentiment of Twitter users towards a specific event/keyword.
        Collected live tweets using Twitter Streaming API, used NLTK for tokenizing and TextBlob for classification.




#- name: Jalpc
#  i18n: jalpc
#  gh_user: jarrekk
#  repo: Jalpc
#  img: /static/assets/img/landing/jekyll.png
#  desc: This project is my project. I use javescript to get repo's information all my repos have only one request.
#
#- name: Python
#  i18n: cpython
#  gh_user: python
#  repo: cpython
#  img: /static/assets/img/landing/python.png
#  desc: This project is other's project. I use another request to get repo's information.
#
#- name: Google
#  i18n: google
#  url: https://google.com
#  img: /static/assets/img/landing/google.png
#  desc: This is another project.
